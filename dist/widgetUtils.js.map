{"version":3,"sources":["widgetUtils.js","dateTime.js","busySlots.js"],"names":[],"mappings":"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","file":"widgetUtils.js","sourcesContent":["import * as DateTime from './dateTime';\nimport * as BusySlots from './busySlots';\n\nexport default {\n  DateTime: DateTime,\n  BusySlots: BusySlots\n};\n","import _ from 'lodash';\nimport moment from 'moment';\n\nexport function setBusinessDateTZ(businessData, date) {\n  var timeOffset = businessData.business.general_info.timezone ?\n    parseInt(businessData.business.general_info.timezone, 10) : utcOffset(moment());\n\n  if (isNaN(timeOffset)) {\n    date.tz(businessData.business.general_info.timezone);\n  } else {\n    date.zone(-timeOffset);\n  }\n\n  return date;\n}\n\nvar utcOffset = function(date) {\n  return date.utcOffset ? date.utcOffset() : -date.zone();\n};\n\nexport function businessTimezoneUtcOffset(businessData) {\n  var curDate = setBusinessDateTZ(businessData, moment.utc());\n  return utcOffset(curDate);\n}\n\n/**\n * The calculation of the beginning of the day for business.\n *\n *  1. save the day, month, year\n *  2. convert the date to timezone business\n *  3. to put the previously stored day, month, year\n *  4. set the start day (in timezone business)\n *\n * @param businessData\n * @param utcDate\n */\nexport function startBusinessTZDay(businessData, utcDate) {\n  var originalDateUnits = _.reduce(['year', 'month', 'date'], function(ret, unit) {\n    ret[unit] = utcDate.get(unit);\n    return ret;\n  }, {});\n\n  setBusinessDateTZ(businessData, utcDate);\n\n  _.each(originalDateUnits, function(value, unit) {\n    utcDate.set(unit, value);\n  });\n\n  // If timezone is greater than zero,\n  // then add this offset to the time zone's business day was the same\n  utcDate.startOf('day');\n  var businessUtcOffset = businessTimezoneUtcOffset(businessData);\n  if (businessUtcOffset > 0) {\n    utcDate.add(businessUtcOffset, 'minute');\n  }\n}\n\nexport function getDateLikeUTC(date) {\n  return moment.utc(date).add(utcOffset(date), 'minute');\n}\n\nvar busySlotsDate = function(date) {\n  return getDateLikeUTC(date).startOf('day').toISOString();\n};\n\n/**\n * Convert date to business timezone like it UTC\n *\n * @param date\n * @param businessData\n */\nvar getBusinessDateLikeUTC = function(date, businessData) {\n  setBusinessDateTZ(businessData, date);\n  return getDateLikeUTC(date);\n};\n\nexport function busySlotsInterval(date, businessData, daysToFetch) {\n  if (!date) {\n    date = moment.utc();\n  }\n\n  date = getBusinessDateLikeUTC(date, businessData);\n  var minBookingTime = getBusinessDateLikeUTC(moment.utc(), businessData);\n  businessData.business.general_info.min_booking_time &&\n    minBookingTime.add('hours', businessData.business.general_info.min_booking_time);\n\n  if (date < minBookingTime) {\n    date = minBookingTime;\n  }\n\n  var then = moment(date).add('days', daysToFetch);\n  return {\n    startDate: busySlotsDate(date),\n    endDate: busySlotsDate(then)\n  };\n}","import _ from 'lodash';\nimport moment from 'moment';\nimport { getDateLikeUTC, setBusinessDateTZ } from './dateTime';\n\n/**\n * Calculates whether the busy day.\n *\n * Не предусматривает случай, когда дискаунт кампания как-то влияет на занятость дня.\n *\n * @param day\n * @param taxonomy\n * @param slotSize\n * @param busySlots\n * @param businessData\n * @returns {Array}\n */\nexport function calculateDaySlotsV1(day, taxonomy, slotSize, busySlots, businessData) {\n  var slots = [];\n  var finish = moment.utc(day.end_time);\n  for (var slot_time = moment.utc(day.start_time); slot_time.isBefore(finish);) {\n    var dateCheck = checkDate(day.slots, slot_time.toDate(), slotSize);\n    var space = dateCheck[0]\n      , duration = dateCheck[1];\n    var spaceLeft = space;\n    var busy = false;\n    if (spaceLeft === 1 && busySlots.maxSlotCapacity > 0) {\n      spaceLeft = -busySlots.maxSlotCapacity;\n    }\n\n    if (spaceLeft === 0) {\n      var currentSlotBackRange = moment.range(moment(slot_time).add('m', -(taxonomy.duration)), slot_time);\n      /* jshint loopfunc:true */\n      slots.forEach(function (s) {\n        if (!s.busy) {\n          s.busy = s.actualSlot.within(currentSlotBackRange) && !currentSlotBackRange.start.isSame(s.actualSlot);\n        }\n      });\n    }\n    if (moment(slot_time).add('m', taxonomy.duration).isAfter(finish)) {\n      space = 0;\n    }\n\n    var actualSlot = moment(slot_time);\n\n    var businessNow = moment.utc();\n    setBusinessDateTZ(businessData, businessNow);\n    var businessNowLikeUTC = getDateLikeUTC(businessNow);\n    busy = businessNowLikeUTC.isAfter(actualSlot) || space === 0 || day.forceAllSlotsBusy;\n\n    slots.push({\n      actualSlot: actualSlot,\n      slotTime: slot_time.format('LT'),\n      spaceLeft: -spaceLeft,\n      busy: !!busy\n    });\n    slot_time.add('minutes', slotSize);\n  }\n\n  return slots;\n}\n\nexport function calculateDaySlotsV2(day, taxonomy, slotSize, busySlots){\n  var slots = [];\n  day.slots.forEach(function(slot){\n    if (!_.isUndefined(slot.busy) && slot.busy && _.isUndefined(slot.space_left)){\n      return;\n    }\n\n    var slot_time = moment.utc(day.date).add(slot.time, 'm');\n    var duration = slot.duration || slotSize;\n    var spaceLeft;\n    if(!_.isUndefined(slot.space_left)){\n      spaceLeft = slot.space_left;\n      if (spaceLeft === 1 && busySlots.maxSlotCapacity > 0) {\n        spaceLeft = busySlots.maxSlotCapacity;\n      }\n    }else{\n      spaceLeft = busySlots.maxSlotCapacity;\n    }\n\n    var actualSlot = moment(slot_time);\n    slots.push({\n      actualSlot: actualSlot,\n      slotTime: slot_time.format('LT'),\n      spaceLeft: spaceLeft,\n      busy: now.isAfter(actualSlot) || spaceLeft === 0\n    });\n    slot_time.add('minutes', slotSize);\n  });\n\n  return slots;\n}\n\nexport function checkDate(slots, date, defaultStep) {\n  var result = [1, defaultStep];\n  if (slots.busy && slots.busy.length) {\n    slots.busy.forEach(function (obj) {\n      var slotDuration = obj.duration || defaultStep;\n      var busySlotRange = moment.range(moment(obj.time), moment(obj.time).add('m', slotDuration));\n      if (moment(date).within(busySlotRange) && !moment(date).isSame(busySlotRange.end)) {\n        result = [-obj.space_left, slotDuration];\n        return false;\n      }\n    });\n  } else if (!slots.available) {\n    result = [0, defaultStep];\n  }\n  return result;\n}\n\nexport function isBusyDay(day, crunchv2, taxonomy, slotSize, busySlots, businessData) {\n  var calculateDaySlots = crunchv2 ? calculateDaySlotsV2 : calculateDaySlotsV1;\n  var slots = calculateDaySlots(day, taxonomy, slotSize, busySlots, businessData);\n  var hasFreeSlot = _.find(slots, {busy: false});\n  return !hasFreeSlot;\n}\n"],"sourceRoot":"/source/"}